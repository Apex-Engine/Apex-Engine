// Apex Extensions
// By Serobliss || Gphazon || || Snivs
//
// Based on Cortex and Wyvern Engines
// Credits
// Wyvern-Xethyr
// Cortex-TheBlackMage
//
// Copyright (C) 2017
// Apex SC2 Roleplaying Engine
// Copyright (C) 2017 <http://www.apexrp.com/> maybe?

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; version 2 of the License.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

#include "Apex/Common/Global.galaxy"
#include "Apex/Toolkit/Toolkit.galaxy"
#include "Apex/Chat/Chat.galaxy"
#include "Apex/Events/Events.galaxy"
#include "Apex/Commands/Commands.galaxy"
#include "Apex/ApexUI/UI.galaxy"

	libapex_write(PlayerGroupActive(), "Welcome to Apex v" + IntToString(libapex_version_major) + "." + IntToString(libapex_version_minor) + "." + IntToString(libapex_version_bugfix) + libapex_version_hotfix + ", with Apex Extensions v" +IntToString(libapex_frg_version_major) + "." + IntToString(libapex_frg_version_minor) + "." + IntToString(libapex_frg_version_bugfix) + libapex_frg_version_hotfix + ". Learn about Apex at ApexRP.com, or visit the reddit https://www.reddit.com/r/StarCraftRP/, \"Roleplaying\".");

	bool libapex_MapCheck()
{
	bool r = true;

	if ( MeleeGetOption(1, c_meleeOptionDefeat || MeleeGetOption(1, c_meleeOptionVictory) ) {
		libapex_write(PlayerGroupAll(), "Melee Trigger has been detected!");
		 r = false;
	}

	if( PlayerType(libapex_setting_getint(libapex_setting_int_neutralcomputer)) != c_playerTypeNeutral ) {
		libapex_write(PlayerGroupAll(), "Incorrect player settings for Neutral!");
		r = false;
	}

	if( PlayerType(libapex_setting_getint(libapex_setting_int_hostilecomputer)) != c_playerTypeHostile ) {
		libapex_write(PlayerGroupAll(), "Incorrect player settings for Hostile!");
		r = false;
	}

	if( PlayerType(libapex_setting_getint(libapex_setting_int_smarthostile)) != c_playerTypeComputer ) {
		libapex_write(PlayerGroupAll(), "Incorrect player settings for Hostile!");
		r = false;
	}

	if( !r ) {
		libapex_write(PlayerGroupAll(), "Some errors were detected. Apex has failed to startup.");
		libapex_write(PlayerGroupAll(), "Engine Version: " + libapex_get_versionstring());
		libapex_write_text(PlayerGroupAll(), StringToText("Please adjust your settings, or inform the author and or publisher of ") + GameMapName() );
	}

	return r;
}

void libapex_InitLib()
{
	libapex_set_debug_mode(false);

	libapex_debug("Apex_init()");

	libactionbar_init();
	libHash_InitLib();

	libapex_settings_initdefault();

	if( libcrtx_MapCheck() ) {
		libapex_toolkit_init();
		libapex_admin_init();
		libapex_events_init();
		libapex_chat_init();
		libapex_commands_init();
		libapex_ui_init();
		libapex_permissions_init();
	}

	libapex_Welcome();

}
